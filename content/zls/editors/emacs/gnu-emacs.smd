---
{
    .title = "GNU Emacs",
    .date = @date("2020-04-07T01:00:00"),
    .author = "Sample Author",
    .layout = "zls-docs.shtml",
    .custom = {
      "in-editor-configuration": "Supported",
    },
}  
---

># [Author's Notice]($block.attrs('warning'))
> This Documentation is [incomplete](https://github.com/zigtools/www.zigtools.org/issues/1).

## [Eglot](https://www.gnu.org/software/emacs/manual/html_node/eglot/index.html) 

1. Install [Melpa](https://melpa.org/#/getting-started)
2. Install [zig mode](https://github.com/ziglang/zig-mode)

To apply [in-editor-configuration](/zls/configure/in-editor) or manually specify the path to `zig` or `zls`, add the following:

```
(with-eval-after-load 'eglot
  (add-to-list 'eglot-server-programs
    '(zig-mode . (
      ;; Use `zls` if it is in your PATH
      "/path/to/zls_executable"
      ;; There are two ways to set config options:
      ;;   - edit your `zls.json` that applies to any editor that uses ZLS
      ;;   - set in-editor config options with the `initializationOptions` field below.
      ;;
      ;; Further information on how to configure ZLS:
      ;; https://zigtools.org/zls/configure/
      :initializationOptions 
        (;; Whether to enable build-on-save diagnostics
         ;;
         ;; Further information about build-on save:
         ;; https://zigtools.org/zls/guides/build-on-save/
         ;;enable_build_on_save t
         
         ;; omit the following line if `zig` is in your PATH
         :zig_exe_path "/path/to/zig_executable"
         )))))
```

Use `M-x eglot` in a zig-mode buffer to start the server or add a hook:

```
(add-hook 'zig-mode-hook 'eglot-ensure)
```

### Code Actions

#### source.fixAll

Add the following to run `source.fixAll` code action on save:

```
(add-hook 'zig-mode-hook
  (lambda ()
    (add-hook 'before-save-hook
      (lambda ()
        (eglot-code-actions nil nil "source.fixAll" t)))))
```

#### source.organizeImports

Use `M-x eglot-code-action-organize-imports` to manually execute the code action.

### Per-project config

Eglot supports per-project configuration which is documented in the [Advanced server configuration](https://www.gnu.org/software/emacs/manual/html_node/eglot/Advanced-server-configuration.html) docs. 
